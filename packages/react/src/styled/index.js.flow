/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.17.0
 * @flow
 */
import type { ComponentType } from 'react';
import type { BasicTemplateInterpolations, CssFunction, FunctionInterpolation } from '../types';
/**
 * Typing for the CSS object.
 */
export type CssObject<TProps> = CssFunction<FunctionInterpolation<TProps>>;
/**
 * Extra props added to the output Styled Component.
 */
export type StyledProps = {
  as?: $Keys<$JSXIntrinsics>,
};
export type Interpolation<TProps: mixed> =
  | BasicTemplateInterpolations
  | FunctionInterpolation<TProps>
  | CssObject<TProps>
  | CssObject<TProps>[];
export interface StyledComponent<ComponentProps: mixed> {
  <TProps: mixed>(
    template: $ReadOnlyArray<string>,
    ...interpolations: Interpolation<TProps>[]
  ): React$ComponentType<{ ...TProps, ...ComponentProps, ...StyledProps }>;
  <TProps: mixed>(
    ...css: Interpolation<TProps>[]
  ): React$ComponentType<{ ...TProps, ...ComponentProps, ...StyledProps }>;
}
export type StyledComponentMap = $ObjMapi<
  $JSXIntrinsics,
  <Tag>(Tag) => StyledComponent<$ElementType<$JSXIntrinsics, Tag>>
>;
export type CreateStyledComponent = {
  <TInheritedProps: mixed>(
    Component: ComponentType<TInheritedProps>
  ): StyledComponent<TInheritedProps>,
  ...
} & StyledComponentMap;
/**
 * ## Styled component
 *
 * Create a component that styles a JSX element which comes with built-in behavior such as `ref` and `as` prop support.
 * For further details [read the documentation](https://compiledcssinjs.com/docs/api-styled).
 *
 * ### Style with objects
 * @example ```
 * styled.div({
 *   fontSize: 12,
 * });
 * ```
 *
 * ### Style with template literals
 * @example ```
 * styled.div`
 *   font-size: 12px
 * `;
 * ```
 *
 * ### Compose styles with arrays
 * @example ```
 * import type { css } from '@compiled/react';
 *
 * styled.div([
 *   { fontSize: 12 },
 *   css`font-size: 12px;`
 * ]);
 *
 * styled.div(
 *   { fontSize: 12 },
 *   css`font-size: 12px`
 * );
 * ```
 */
declare export var styled: CreateStyledComponent;
