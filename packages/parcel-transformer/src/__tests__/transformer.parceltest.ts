import { join } from 'path';

import Parcel, { createWorkerFarm } from '@parcel/core';
import { MemoryFS } from '@parcel/fs';

const rootPath = join(__dirname, '..', '..', '..', '..');
const fixtureRoot = join(rootPath, 'fixtures/parcel-transformer-test-app');
const extractionFixtureRoot = join(rootPath, 'fixtures/parcel-transformer-test-extract-app');
const babelComponentFixtureRoot = join(rootPath, 'fixtures/babel-component');

const workerFarm = createWorkerFarm();

afterAll(() => {
  workerFarm.end();
});

// describe('transformer without extraction', () => {
//   const outputFS = new MemoryFS(workerFarm);
//   const parcel = new Parcel({
//     config: join(fixtureRoot, '.parcelrc'),
//     entries: [join(fixtureRoot, 'src', 'index.html')],
//     outputFS,
//     targets: {
//       default: {
//         distDir: join(fixtureRoot, 'dist'),
//       },
//     },
//     workerFarm,
//   });

//   it('transforms assets with babel plugin', async () => {
//     const { changedAssets } = await parcel.run();

//     const asset = Array.from(changedAssets.values()).find(
//       (asset) => asset.filePath === join(fixtureRoot, 'src/index.js')
//     );

//     const code = await asset?.getCode();
//     expect(code).toMatchInlineSnapshot(`
//       "\\"use strict\\";
//       var _runtime = require(\\"@compiled/react/runtime\\");
//       var _jsxRuntime = require(\\"react/jsx-runtime\\");
//       /* index.js generated by @compiled/babel-plugin v0.0.0 */ var _2 = \\"._syaz5scu{color:red}\\";
//       var _ = \\"._1wyb12am{font-size:50px}\\";
//       var App = function() {
//           /*#__PURE__*/ return (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
//               children: /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_runtime.CC, {
//                   children: [
//                       /*#__PURE__*/ (0, _jsxRuntime.jsx)(_runtime.CS, {
//                           children: [
//                               _,
//                               _2
//                           ]
//                       }),
//                       /*#__PURE__*/ (0, _jsxRuntime.jsx)(\\"div\\", {
//                           className: (0, _runtime.ax)([
//                               \\"_1wyb12am _syaz5scu\\"
//                           ]),
//                           children: \\"hello from parcel\\"
//                       })
//                   ]
//               })
//           });
//       };
//       "
//     `);
//   }, 30000);
// });

describe('transformer with extraction', () => {
  it('transforms assets with compiled and extraction babel plugins', async () => {
    const outputFS = new MemoryFS(workerFarm);
    const parcel = new Parcel({
      config: join(extractionFixtureRoot, '.parcelrc'),
      entries: [join(extractionFixtureRoot, 'src', 'index.html')],
      outputFS,
      targets: {
        default: {
          distDir: join(extractionFixtureRoot, 'dist'),
        },
      },
      workerFarm,
    });
    const { changedAssets } = await parcel.run();

    const asset = Array.from(changedAssets.values()).find(
      (asset) => asset.filePath === join(extractionFixtureRoot, 'src/index.js')
    );

    const code = await asset?.getCode();
    expect(code).toMatchInlineSnapshot(`
      "\\"use strict\\";
      require(\\"compiled-css!._syaz5scu%7Bcolor%3Ared%7D\\");
      require(\\"compiled-css!._1wyb12am%7Bfont-size%3A50px%7D\\");
      var _runtime = require(\\"@compiled/react/runtime\\");
      var _babelComponentFixture = require(\\"@compiled/babel-component-fixture\\");
      var _jsxRuntime = require(\\"react/jsx-runtime\\");
      /* index.js generated by @compiled/babel-plugin v0.0.0 */ var App = function() {
          /*#__PURE__*/ return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
              children: [
                  /*#__PURE__*/ (0, _jsxRuntime.jsx)(\\"div\\", {
                      className: (0, _runtime.ax)([
                          \\"_1wyb12am _syaz5scu\\"
                      ]),
                      children: \\"hello from parcel\\"
                  }),
                  /*#__PURE__*/ (0, _jsxRuntime.jsx)(_babelComponentFixture.Button, {
                      children: \\"Button\\"
                  })
              ]
          });
      };
      "
    `);
  }, 30000);

  it('imports are extracted', async () => {
    const outputFS = new MemoryFS(workerFarm);
    const parcel = new Parcel({
      config: join(extractionFixtureRoot, '.parcelrc'),
      entries: [join(extractionFixtureRoot, 'src', 'index.html')],
      outputFS,
      targets: {
        default: {
          distDir: join(extractionFixtureRoot, 'dist'),
        },
      },
      workerFarm,
    });
    // Extraction should be on here but is off
    const { changedAssets, bundleGraph } = await parcel.run();

    const bundle = bundleGraph.getBundles()[1];
    const result = String(outputFS.readFileSync(bundle.filePath));

    const asset = Array.from(changedAssets.values()).find(
      (asset) => asset.filePath === join(babelComponentFixtureRoot, 'dist/index.js')
    );

    const code = await asset?.getCode();
    expect(code).toMatchInlineSnapshot(`
      "/* index.js generated by @compiled/babel-plugin v0.12.1 */ \\"use strict\\";
      Object.defineProperty(exports, \\"__esModule\\", {
          value: true
      });
      exports.default = BabelComponent;
      var _react = require(\\"react\\");
      var _runtime = require(\\"@compiled/react/runtime\\");
      var _jsxRuntime = require(\\"react/jsx-runtime\\");
      var _excluded = [
          \\"as\\",
          \\"style\\"
      ];
      var _8 = \\"._19pk1ul9{margin-top:30px}\\";
      function ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object);
          if (Object.getOwnPropertySymbols) {
              var symbols = Object.getOwnPropertySymbols(object);
              enumerableOnly && (symbols = symbols.filter(function(sym) {
                  return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              })), keys.push.apply(keys, symbols);
          }
          return keys;
      }
      function _objectSpread(target) {
          var _arguments = arguments, _loop = function(i) {
              var source = null != _arguments[i] ? _arguments[i] : {
              };
              i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {
                  _defineProperty(target, key, source[key]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
                  Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
              });
          };
          for(var i = 1; i < arguments.length; i++)_loop(i);
          return target;
      }
      function _defineProperty(obj, key, value) {
          if (key in obj) Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
          else obj[key] = value;
          return obj;
      }
      function _objectWithoutProperties(source, excluded) {
          if (source == null) return {
          };
          var target = _objectWithoutPropertiesLoose(source, excluded);
          var key, i;
          if (Object.getOwnPropertySymbols) {
              var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
              for(i = 0; i < sourceSymbolKeys.length; i++){
                  key = sourceSymbolKeys[i];
                  if (excluded.indexOf(key) >= 0) continue;
                  if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
                  target[key] = source[key];
              }
          }
          return target;
      }
      function _objectWithoutPropertiesLoose(source, excluded) {
          if (source == null) return {
          };
          var target = {
          };
          var sourceKeys = Object.keys(source);
          var key, i;
          for(i = 0; i < sourceKeys.length; i++){
              key = sourceKeys[i];
              if (excluded.indexOf(key) >= 0) continue;
              target[key] = source[key];
          }
          return target;
      }
      var _7 = \\"._19bvftgi{padding-left:8px}\\";
      var _6 = \\"._n3tdftgi{padding-bottom:8px}\\";
      var _5 = \\"._u5f3ftgi{padding-right:8px}\\";
      var _4 = \\"._ca0qftgi{padding-top:8px}\\";
      var _3 = \\"._19itlf8h{border:2px solid blue}\\";
      var _2 = \\"._1wyb1ul9{font-size:30px}\\";
      var _ = \\"._syaz13q2{color:blue}\\";
      var Button = (0, _react.forwardRef)(function(_ref, ref) {
          var _ref$as = _ref.as, C = _ref$as === void 0 ? \\"button\\" : _ref$as, style = _ref.style, props = _objectWithoutProperties(_ref, _excluded);
          return(/*#__PURE__*/ (0, _jsxRuntime.jsxs)(_runtime.CC, {
              children: [
                  /*#__PURE__*/ (0, _jsxRuntime.jsx)(_runtime.CS, {
                      children: [
                          _,
                          _2,
                          _3,
                          _4,
                          _5,
                          _6,
                          _7
                      ]
                  }),
                  /*#__PURE__*/ (0, _jsxRuntime.jsx)(C, _objectSpread(_objectSpread({
                  }, props), {
                  }, {
                      style: style,
                      ref: ref,
                      className: (0, _runtime.ax)([
                          \\"_syaz13q2 _1wyb1ul9 _19itlf8h _ca0qftgi _u5f3ftgi _n3tdftgi _19bvftgi\\",
                          props.className
                      ])
                  }))
              ]
          }));
      });
      Button.displayName = 'Button';
      function BabelComponent(_ref2) {
          var children = _ref2.children;
          return(/*#__PURE__*/ (0, _jsxRuntime.jsxs)(_runtime.CC, {
              children: [
                  /*#__PURE__*/ (0, _jsxRuntime.jsx)(_runtime.CS, {
                      children: [
                          _8
                      ]
                  }),
                  /*#__PURE__*/ (0, _jsxRuntime.jsx)(\\"div\\", {
                      className: (0, _runtime.ax)([
                          \\"_19pk1ul9\\"
                      ]),
                      children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(Button, {
                          children: children
                      })
                  })
              ]
          }));
      }
      "
    `);
  }, 30000000);
});
