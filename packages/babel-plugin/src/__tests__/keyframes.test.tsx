import { transformSync } from '@babel/core';
import babelPlugin from '../index';

const transform = (code: TemplateStringsArray) => {
  return transformSync(code[0], {
    configFile: false,
    babelrc: false,
    filename: 'keyframes.test.tsx',
    presets: [['@babel/preset-react', { runtime: 'automatic' }]],
    plugins: [[babelPlugin, { importReact: false }]],
  })?.code;
};

describe('keyframes', () => {
  it('should hash keyframes string input', () => {
    const actual = transform`
      import { keyframes } from '@compiled/react';

      const fadeIn = keyframes\`
        from { opacity: 0 }
        to { opacity: 1 }
      \`;

      <div css={{ animation: fadeIn }} />
    `;

    expect(actual).toMatchInlineSnapshot(`
      "/* keyframes.test.tsx generated by @compiled/babel-plugin v0.0.0 */

      import { ax, ix, CC, CS } from \\"@compiled/react/runtime\\";
      import { jsxs as _jsxs } from \\"react/jsx-runtime\\";
      import { jsx as _jsx } from \\"react/jsx-runtime\\";
      const _ = \\"._y44v1jna{-webkit-animation:var(--_y5by75);animation:var(--_y5by75)}\\";
      const fadeIn = null;

      /*#__PURE__*/
      _jsxs(CC, {
        children: [/*#__PURE__*/_jsx(CS, {
          children: [_]
        }), /*#__PURE__*/_jsx(\\"div\\", {
          className: ax([\\"_y44v1jna\\"]),
          style: {
            \\"--_y5by75\\": ix(fadeIn)
          }
        })]
      });"
    `);
  });
});
